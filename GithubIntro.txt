===========================================================================
ALWAYS USE "Q" WHEN YOU WANT TO EXIT

If by mistake I delete important file information then to un-modify this file we write

git checkout -- FileName.ext
(Commit should not be done)
===========================================================================
What is Git??

Git is a distributed version control system,(Keep track of files) i.e everyone has one copy of repo.
---------------------------------------------------------------------------
What is Git bash??

Git bash is a terminal which works as unix. We can use git bash as terminal. We can run python with git bash.
----------------------------------------------------------------------
Git is software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. Its goals include speed, data integrity, and support for distributed, non-linear workflows.

	• Git advantage
		○ Easily recover files
		○ Who introduced an issue and when
		○ Rollback the code to a working previous state
	• Feature
		○ Fast
		○ Capture the snapshot, not the difference
		○ Almost every operation is local (no internet required)  i.e. all operations are performed on locally and after that can push the repo to a remote (centralized server).
		○ Git has integrity i.e all the changes are tracked and need approval for merging. Has SHA1 checksum to validate the files.
○ Git generally only adds data
---------------------------------------------------------------------------
History of VCS (Version Control System)
1. First local vcs were introduced
pros- can track file and rollback
cons- If you lose your hard disk everything will be lost
2. Centralyzed vcs
Local server
pros- anyone can pull or push file
cons- If server get damaged then you loose all the data
3. Distributed vcs (If someone pull data there will always be a full backup in the system).
If you change anything everyone will get that data.
It is same as centralizes vcs but when someone pull any file he gets all the history of the file.
It pull only source code file and if theres change in file then only the changes will be saved.
---------------------------------------------------------------------------
git save file under .git folder
.git folder is an hidden folder where all the history is saved
---------------------------------------------------------------------------
When we use git for the first time we have to give details like email, name etc
---------------------------------------------------------------------------
to do that we have to write
set username
git config --global user.name Shashwat
set email
git config --global user.email ssri.gzp@gmail.com

---------------------------------------------------------------------------

Here are some key points on Git and GitHub:

- Git is a distributed version control system designed to track changes in files and coordinate work among multiple developers.
- Git allows developers to create branches, make changes, merge branches, and revert to previous versions easily.
- Git uses a decentralized architecture, where each developer has a complete copy of the project's repository, including the full history.
- Git operates locally, allowing developers to work offline and commit changes to their local repository.
- GitHub is a web-based platform that provides hosting for Git repositories and adds additional collaboration features.
- GitHub allows developers to store their Git repositories in the cloud, making them accessible from anywhere.
- GitHub enables collaboration by providing tools for code review, issue tracking, and pull requests.
- It facilitates team collaboration, as multiple developers can work on different branches and merge their changes through pull requests.
- GitHub also offers features like wikis, project management tools, and continuous integration and deployment.
- It is widely used in the open-source community and by many organizations for version control and collaboration.
- Git and GitHub are not the same thing; Git is the version control system, while GitHub is a hosting platform for Git repositories.

---------------------------------------------------------------------------
To get the repo or to find a repo we use command
first init and second cloning.
---------------------------------------------------------------------------
code . command take us to visual studio code
ls -lart command show us all the hidden folder

===========================================================================
We can get under any folder with the help of cd command in git bash (Terminal program)

> Git Three stage Architecture
Local operations
1. Working Directory : File which seen in explorer are called working directory.
2. Staging area : Staging area is those set of files which go for snapshot
3. Git directory (repository) : Git directory is .git directory or hidden folder

~ working directory >>>(stage file)>>> staging area >>>(commit) >>>Git directory  >>>> (Check out the project)>>>> working directory

===========================================================================
Use of Git bash to track
git status (to check the status of git)

git init (To initialize git or to make your directory a git repository)
git add --a (send all files to staging area)
git commit -m (To write message) "Initial commit"
git log (If you want to know what you have commit)
---------------------------------------------------------------------------
If you modify some file
git status (Show us that you modify something)

If we want to send only 1 file to staging area then-
git add FileName.ext (With git add we push the file to staging area
git commit -m (Add better design)

===========================================================================
To delete git repository
rm -rf .git (rm -rf delete a folder it is a linux command)(.git is folder which contain repository content).

to clone git repository
git clone (link) FolderName (folderName is the new folder which will be made automatically)

===========================================================================
The folder which we track is called repository

File Status Lifecycle-

` untracked>>(add the file)>>unmodified>>(edit the file)>>modified>>(stage the file)>>staged>>>>(commit)>>>>unmodified>>>>(remove the file)>>>untracked.

unmodified is a staging area and modified is also a staging area (If there any change in the file it come under modified area).

===========================================================================
If we want to ignore file while running status then create a new file with
touch .gitignore, it will create a .gitignore file
and write the file name in this file

If we want to ignore all the file with same ext like .log
Just write *.log in .gitignore file
--------------------------------------------------------------------------
To ignore a folder which is inside any folder just write folderName/ in .gitignore file

If you only want to ignore the folder which is not inside any folder or outer folder then write /folderName/ in .gitignore file

===========================================================================
git diff command compare working area with staging area
like if we change something earlier and push the file to staging area and again we edit something then git diff come under play
---------------------------------------------------------------------------
$ git diff
diff --git a/Static/This file outside dir.txt b/Static/This file outside dir.txt
index 04ce9f5..1c72234 100644
--- a/Static/This file outside dir.txt
+++ b/Static/This file outside dir.txt
@@ -1,2 +1,3 @@
 This file is outside dir
-Now we are going to edit this file
\ No newline at end of file
+Now we are going to edit this file
+Again we edit something
\ No newline at end of file

----
It show that file under static folder has two version first a and second b
It tells us in staging area there one file which is removed and add to its working directory
---------------------------------------------------------------------------
If we want to compare last commit with current staging area theres command for this too
git diff --staged
===========================================================================
To-do  direct commit i.e skipping staging area  then we write

git commit -a -m "Direct commit"
This line stage all the tracked file and commit  those files
But with this untracked file does not go to commit.

===========================================================================
Rename a file in git (manually)
First change the file name
then go to git bash

git status
(It will show how you delete file then add new file)
git add .
(With git add . git will know that you change file name)
git commit -m "We rename file name"

It will 100% of time
---------------------------------------------------------------------------
Rename file in git

git mv fileName.ext FileRenamed.ext (mv means move command)
It will change the file name then it will send the file to staging area
---------------------------------------------------------------------------
Remove file with the help of git bash

git rm fileName.ext
It remove file for us then it also stage file
---------------------------------------------------------------------------
We can not ignore the file if it already tracked
First we have to untrack the file by-

git rm --cached fileName.ext

===========================================================================
Git log: Viewing and changing commits in Git

ALWAYS USE "Q" WHEN YOU WANT TO EXIT

Viewing commits in git
First we have to clone a git repository
copy git repository link then in git bash

git clone link folderName
It will create a folder in local drive where git repository is downloaded
Then we can see git status or git log
---------------------------------------------------------------------------
Git log command (IMPORTANT)

git log --stat
It will give log in very detailed manner
It will tell us the changes in file made by a single person
It give log in very short

git log --pretty=oneline
It tells a commit in a single line and it give all the commit information

git log --pretty=short
It gives detail in short form (It does not show us diff and date)

git log --pretty=full
It will show author commit message

git log -p -1
It will show us last commit

---------------------------------------------------------------------------
Difference between author and commit?

Author is the one who made the file and commit is the one who made changes in the file
---------------------------------------------------------------------------

How to make filter in git log ?  (Filter time)

git log --since=2.days
It give log information of previous two days

we can write
git log --since=2.weeks
git log --since=2.months
git log --since=2.years

git log --pretty=format:"%H == %an" (You will get this information on git scm log information bookmarked)
It give git log output in commit hash == author name format

---------------------------------------------------------------------------
If we want to make change in commit or amend commit

First make some change in file
Then on git bash

git status
git add .
git commit --amend

press i to insert message
write message
press esc
Then write :wq

This will make change in repository with message

===========================================================================
Un-staging and Un-modifying Files in Git

Un-staging a file in git
with git add . files come in staging area
If we want to un-stage a file then we write

git restore --staged FileName.ext

"git restore" is dangerous command it will discard all the changes, modified content will match old commit.
---------------------------------------------------------------------------

Un-modifying file in git
If by mistake I delete important file information then to un-modify this file we write

git checkout -- FileName.ext

It will undo the changes
(Commit should not be done)
---------------------------------------------------------------------------
If we want to delete all the changes and want to go to last commit then we write

git checkout -f

It removes all the modified changes and you come to clean state

---------------------------------------------------------------------------
Working with remote repository

We have to make a remote. Remote means a website or repository which is on Internet. We are using git there are multiple site.

git remote add origin https://github.com/SsriOO7/GitTutorialDemo.git
This line means git remote add an url whose name will be origin
Common practice is to name it origin, we have to say origin

"git push -u origin main" is used to push in remote repository.
===========================================================================

Setting Alias in Git

Alias means instead of writing big command we use small command. Example
st for status

If we want to write status as st or use st instead of status in git then first we have to write
git config --global alias.st status.

We use alias when we run single command multiple times.

===========================================================================

Creating and Switching Branches in Git

Creating a new branch from master branch. First you have to write

git checkout -b develop
-b means creating a new branch and develop is the name of the branch.
It does two thing first it make a branch then it will take us to the branch.
With this now we are in new branch with the name of develop.

First we have to make a new branch then only we should make changes otherwise it will make change in master branch.

---------------------------------------------------------------------------

Switching branch in Git
To switch form develop branch to master branch we have to write

git checkout master

With this we will be in master branch and there will be no changes in master branch if we had made some change in develop branch.
--------------------------------------------------------------------------
When the file is in gitignore then there will be no changes in the file. We can not do anything.
--------------------------------------------------------------------------
To get the list of the branches we use
git branch
---------------------------------------------------------------------------
Branch by default will not push on github we have to do it ourself.

===========================================================================

Branching and Merging a Production grade project

Keep in mind always commit before changing the branch. Always be in clean state.

Make a new branch trycleanup
Make some changes in branch then move on to the new step - merging of branch.
---------------------------------------------------------------------------

To Merge Branch in Git-

> First select master branch
> Then write git merge trycleanup
If theres conflict
> Then a message will pop up about merge conflict i.e difference between master branch and trycleanup branch. You have to select one change between them.
> You have to accept between current change and incoming change. (In Vscode)
> If you accept incoming change then it will change in master branch. (In Vscode)
> git status. It will show "You have unmerged path"
> git add .
> git commit -m "We have successfully merged two branches"

How there's conflict in code ?
When we make some change in master branch and we make change in trycleanup branch then there will be conflict and when have to select between these two.
===========================================================================

Resolve merge conflict and branch management

Merge Conflict-
Merge conflict means when you try to merge a branch and git can not do so.

"<<<<<<" this symbol is know as conflict resolution marker.

Branch management-
Commands of branch
If we want to see the last commit of every branch then we write-
> git branch -v it also gives "commit hash and commit message".

> git branched --merged
It show all the branches which you have already merged.

> git branched --no-merged
It show all the branches which was not merged.

>> Delete a branch
> git branch -d branchName * NOTE- If you have not merged branch then it will not be deleted instead it will gives error. If its not merged git will think you are accidentally deleting file.
 If you want to delete then you have you to write "D" instead of "d".
===========================================================================

Branching Workflow

two type of branches
> long running branches : the branches which are use for long run. like master branch.
> topic branches : when new idea come to mind then we make topic branch. This branch run for short term.
===========================================================================

Pushing git branch to remote repository (Server)

Push different branch other than main branch in git repository-
First we create a new branch bugfix
git checkout -b bugfix
Then first we push main branch
Then change branch with
git checkout bugfix
Then push bugfix branch to git

Branch name change-

git push origin bugfix:mybugfix
